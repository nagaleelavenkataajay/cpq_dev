//CSYS-105865 (OK. 3-18-2022) Check if OED and Core service NBD is within grace period

result = false;

if (quoteType_quote == "Add-On Business" AND orderEffectiveDate_quote <> "" AND billingCycle_quote == "Quarterly") {
	oedMonth = "";
	oedYear = "";
	matchedAssetNBDStr = "";
	timezone = util.getUserTimeZone();
	oedDate = getdate();
	matchedAssetNBD = getdate();
	DATE_FORMAT_PREFERENCE_HYPHEN = "yyyy-MM-dd"; 
	DATE_FORMAT_PREFERENCE_SLASH = "MM/dd/yyyy";
	currentDate = getdate();
	submissionDate = getdate();
	currentDateStr = substring(datetostr(currentDate, DATE_FORMAT_PREFERENCE_SLASH, timezone), 0, 10);
	submissionDate = strtojavadate(currentDateStr, DATE_FORMAT_PREFERENCE_SLASH, timezone);
	currDateMonth = substring(currentDateStr, 0, 2);	
	currDateYear = substring(currentDateStr, 6, 10);
	nBDMonth = "";
	nBDYear = "";
	
	if(find(orderEffectiveDate_quote, "/") <> -1){
		oedMonth = substring(orderEffectiveDate_quote, 0, 2);	
		oedYear = substring(orderEffectiveDate_quote, 6, 10);
	}
	else{
		oedMonth = substring(orderEffectiveDate_quote, 5, 7);	
		oedYear = substring(orderEffectiveDate_quote, 0, 4);
	}
	
	for line in line_process {
		nextBillDate = line.nextBillingDate_line;
		poCategory = line.poCategory_line;
		itemType = line._part_custom_field8;
		action = line.assetAction_line;
		checkNBD = false;
		
		if (poCategory == "Core Service" AND itemType == "Base" AND nextBillDate <> "") {	
			if (((standardToProfessionalMigrationFlag OR orderEffectiveDateHDS_quote <> "") AND action == "TERMINATE") OR (action <> "TERMINATE" AND termDateForDDDetect_quote <> "")) {
				checkNBD = true;
			}
			else {
				if (NOT(standardToProfessionalMigrationFlag OR orderEffectiveDateHDS_quote <> "" OR termDateForDDDetect_quote <> "")) {
					checkNBD = true;
				}
			}
			
			if (checkNBD == true) {
				coreNBD = nextBillDate;				
				if(find(coreNBD, "/") <> -1){
					nBDMonth = substring(coreNBD, 0, 2);	
					nBDYear = substring(coreNBD, 6, 10);
				}
				else{
					nBDMonth = substring(coreNBD, 5, 7);	
					nBDYear = substring(coreNBD, 0, 4);
				}
			}
		}
	}

	tableResSet = bmql("SELECT AssetNextBillDate FROM AssetNextBillDates");
	if (oedMonth == currDateMonth AND oedYear == currDateYear AND nBDMonth == currDateMonth AND nBDYear == currDateYear){
		for item in tableResSet {
			assetNBD = get(item, "AssetNextBillDate");
			if (assetNBD <> ""){
				assetNBDMonth = substring(assetNBD, 5, 7);
				assetNBDYear = substring(assetNBD, 0, 4);
				
				if (assetNBDMonth == oedMonth AND assetNBDYear == oedYear){
					matchedAssetNBDStr = assetNBD;
					break;
				}
			}
		}
		if (matchedAssetNBDStr == ""){
			matchedAssetNBDStr = oedYear + "-" + oedMonth + "-" + "06";
		}
		if(timezone <> ""){
			matchedAssetNBD = strtojavadate(matchedAssetNBDStr, DATE_FORMAT_PREFERENCE_HYPHEN, timezone);
		}
		else{
			matchedAssetNBD = strtojavadate(matchedAssetNBDStr, DATE_FORMAT_PREFERENCE_HYPHEN);
		}
		
		if (comparedates(submissionDate, matchedAssetNBD) <= 0){
			result = true;
		}
	}
}

return result;